<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4019.2">
  <POU Name="SM_CoverApertureProcedure" Id="{a70a98de-5430-4e3c-b1be-f9dcb7b3b8d6}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK SM_CoverApertureProcedure
VAR_INPUT
	///New state, to be set by the manual implementation
	{attribute 'OPC.UA.DA' := '0'}
	state: CoverApertureProcedureStates;
END_VAR
VAR_OUTPUT
	///Current status description
	{attribute 'OPC.UA.DA' := '1'}
	{attribute 'OPC.UA.DA.Access' := '1'}
	actualStatus: STRING;
	///Is the procedure busy with opening?
	{attribute 'OPC.UA.DA' := '1'}
	{attribute 'OPC.UA.DA.Access' := '1'}
	opening: BOOL;
	///Is the procedure busy with closing?
	{attribute 'OPC.UA.DA' := '1'}
	{attribute 'OPC.UA.DA.Access' := '1'}
	closing: BOOL;
	///The closest distance between the top and bottom panels
	{attribute 'OPC.UA.DA' := '1'}
	{attribute 'OPC.UA.DA.Access' := '1'}
	distance: AngularPosition;
	///Statuses of the state machine
	statuses: CoverApertureProcedureStatuses;
END_VAR
VAR_IN_OUT
	{attribute 'OPC.UA.DA' := '0'}
	top: CoverPanelSet;
	{attribute 'OPC.UA.DA' := '0'}
	bottom: CoverPanelSet;
	{attribute 'OPC.UA.DA' := '0'}
	coverConfig: CoverConfig;
END_VAR
VAR
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[statuses.busyStatus( isBusy := NOT((state = CoverApertureProcedureStates.IDLE) OR ((state = CoverApertureProcedureStates.ABORTED) OR (state = CoverApertureProcedureStates.ERROR))) );
statuses.healthStatus(
    isGood := NOT(state = CoverApertureProcedureStates.ERROR),
    hasWarning := state = CoverApertureProcedureStates.ABORTED);
]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>