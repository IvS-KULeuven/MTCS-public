<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4019.2">
  <POU Name="SM_Services" Id="{91b6a42c-fdf3-40eb-b5fe-90facc9c3c85}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK SM_Services
VAR_INPUT
	///Editable configuration of the Services subsystem
	{attribute 'OPC.UA.DA' := '1'}
	{attribute 'OPC.UA.DA.Access' := '1'}
	editableConfig: ServicesConfig;
END_VAR
VAR_OUTPUT
	///Current status description
	{attribute 'OPC.UA.DA' := '1'}
	{attribute 'OPC.UA.DA.Access' := '1'}
	actualStatus: STRING;
	///Active configuration of the Services subsystem
	{attribute 'OPC.UA.DA' := '1'}
	{attribute 'OPC.UA.DA.Access' := '1'}
	config: ServicesConfig;
	///Statuses of the state machine
	statuses: ServicesStatuses;
	///Parts of the state machine
	parts: ServicesParts;
	///Processes of the state machine
	processes: ServicesProcesses;
END_VAR
VAR_IN_OUT
	///Shared operator status
	{attribute 'OPC.UA.DA' := '0'}
	operatorStatus: OperatorStatus;
END_VAR
VAR
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[parts.timing(
    operatorStatus := operatorStatus,
    config := config.timing);
parts.configManager( isEnabled := operatorStatus.tech );
statuses.initializationStatus();
statuses.healthStatus(
    isGood := parts.timing.statuses.healthStatus.isGood,
    hasWarning := parts.timing.statuses.healthStatus.hasWarning);
statuses.busyStatus( isBusy := statuses.initializationStatus.initializing OR parts.timing.statuses.busyStatus.busy );
statuses.operatingStatus( superState := statuses.initializationStatus.initialized );
processes.initialize( isEnabled := statuses.initializationStatus.shutdown OR (statuses.initializationStatus.initializingFailed OR statuses.initializationStatus.initialized) );
processes.lock( isEnabled := operatorStatus.tech AND statuses.initializationStatus.initialized );
processes.unlock( isEnabled := operatorStatus.tech AND statuses.initializationStatus.locked );
processes.changeOperatingState( isEnabled := FALSE );
]]></ST>
    </Implementation>
    <Method Name="initialize" Id="{35a5605a-c915-458e-8a78-a99d49310373}">
      <Declaration><![CDATA[{attribute 'TcRpcEnable' := '1'}
METHOD initialize : RequestResults
VAR_INPUT
END_VAR
VAR_OUTPUT
END_VAR
VAR_IN_OUT
END_VAR
VAR
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[initialize := THIS^.processes.initialize.request();
]]></ST>
      </Implementation>
    </Method>
    <Method Name="changeOperatingState" Id="{85734956-300e-4a93-9c18-96059ea02c39}">
      <Declaration><![CDATA[{attribute 'TcRpcEnable' := '1'}
METHOD changeOperatingState : RequestResults
VAR_INPUT
	state: OperatingStates;
END_VAR
VAR_OUTPUT
END_VAR
VAR_IN_OUT
END_VAR
VAR
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[changeOperatingState := THIS^.processes.changeOperatingState.request( state := state );
]]></ST>
      </Implementation>
    </Method>
    <Method Name="lock" Id="{b90462cf-4690-4c29-a17c-5cd44e6dc5aa}">
      <Declaration><![CDATA[{attribute 'TcRpcEnable' := '1'}
METHOD lock : RequestResults
VAR_INPUT
END_VAR
VAR_OUTPUT
END_VAR
VAR_IN_OUT
END_VAR
VAR
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[lock := THIS^.processes.lock.request();
]]></ST>
      </Implementation>
    </Method>
    <Method Name="unlock" Id="{ba84d764-2e75-4669-a6a4-5670eb93625f}">
      <Declaration><![CDATA[{attribute 'TcRpcEnable' := '1'}
METHOD unlock : RequestResults
VAR_INPUT
END_VAR
VAR_OUTPUT
END_VAR
VAR_IN_OUT
END_VAR
VAR
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[unlock := THIS^.processes.unlock.request();
]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>