<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4019.2">
  <POU Name="SM_ForceMeasurement" Id="{b0bce3d3-fe16-4151-92a8-025a251ae5df}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK SM_ForceMeasurement
VAR_INPUT
	///Measured raw value
	{attribute 'OPC.UA.DA' := '0'}
	rawValue AT %I*: DINT;
	///Error
	{attribute 'OPC.UA.DA' := '0'}
	error AT %I*: BOOL;
	///Underrange
	{attribute 'OPC.UA.DA' := '0'}
	underrange AT %I*: BOOL;
	///Overrange
	{attribute 'OPC.UA.DA' := '0'}
	overrange AT %I*: BOOL;
	///rawValue * conversionFactor = newton.value
	{attribute 'OPC.UA.DA' := '0'}
	conversionFactor: LREAL := 1.0;
END_VAR
VAR_OUTPUT
	///Current status description
	{attribute 'OPC.UA.DA' := '1'}
	{attribute 'OPC.UA.DA.Access' := '1'}
	actualStatus: STRING;
	///Actual value
	{attribute 'OPC.UA.DA' := '1'}
	{attribute 'OPC.UA.DA.Access' := '1'}
	actual: Force;
	///Moving average value
	{attribute 'OPC.UA.DA' := '1'}
	{attribute 'OPC.UA.DA.Access' := '1'}
	average: Force;
	///Statuses of the state machine
	statuses: ForceMeasurementStatuses;
END_VAR
VAR_IN_OUT
	///Reference to the config (alarms in Newton)
	{attribute 'OPC.UA.DA' := '0'}
	config: MeasurementConfig;
END_VAR
VAR
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[actual( newNewtonValue := (rawValue * conversionFactor) + config.offset );
statuses.enabledStatus( isEnabled := config.enabled );
statuses.healthStatus(
    superState := statuses.enabledStatus.enabled,
    isGood := NOT(error OR (underrange OR (overrange OR (statuses.alarmStatus.hiHi OR statuses.alarmStatus.loLo)))),
    hasWarning := statuses.alarmStatus.hi OR statuses.alarmStatus.lo);
statuses.alarmStatus(
    superState := statuses.enabledStatus.enabled,
    config := config.alarms,
    value := average.newton.value);
]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>