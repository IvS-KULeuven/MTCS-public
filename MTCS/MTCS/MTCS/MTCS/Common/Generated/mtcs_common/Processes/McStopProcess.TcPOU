<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4019.2">
  <POU Name="McStopProcess" Id="{76f764e4-6e49-43dc-984f-ddc85bdedc52}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK McStopProcess EXTENDS BaseMcProcess
VAR_INPUT
	///Arguments to be set, before writing do_request TRUE
	{attribute 'OPC.UA.DA' := '1'}
	set: McStopProcessArgs;
END_VAR
VAR_OUTPUT
	///Arguments in use by the process, if do_request was accepted
	{attribute 'OPC.UA.DA' := '1'}
	{attribute 'OPC.UA.DA.Access' := '1'}
	get: McStopProcessArgs;
END_VAR
VAR_IN_OUT
END_VAR
VAR
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[IF do_request THEN
    do_request_result := request(
    deceleration := set.deceleration,
    jerk := set.jerk);
    do_request := FALSE;
END_IF;
SUPER^();
]]></ST>
    </Implementation>
    <Method Name="start" Id="{a1caa0c3-41a1-4b7c-a137-15699c26aa38}">
      <Declaration><![CDATA[{attribute 'TcRpcEnable' := '1'}
METHOD start
VAR_INPUT
	///Deceleration (use 0 for default). If non zero, then also jerk must be non zero!
	deceleration: LREAL;
	///Jerk (use 0 for default). If non zero, then also deceleration must be non zero!
	jerk: LREAL;
END_VAR
VAR_OUTPUT
END_VAR
VAR_IN_OUT
END_VAR
VAR
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[THIS^.get.deceleration := deceleration;
THIS^.get.jerk := jerk;
THIS^.statuses.busyStatus( isBusy := TRUE );
THIS^.statuses.healthStatus( isGood := TRUE );
]]></ST>
      </Implementation>
    </Method>
    <Method Name="request" Id="{ec3fc631-838c-4bf2-bf22-1ec1891ca2ab}">
      <Declaration><![CDATA[{attribute 'TcRpcEnable' := '1'}
METHOD request : RequestResults
VAR_INPUT
	///Deceleration (use 0 for default). If non zero, then also jerk must be non zero!
	deceleration: LREAL;
	///Jerk (use 0 for default). If non zero, then also deceleration must be non zero!
	jerk: LREAL;
END_VAR
VAR_OUTPUT
END_VAR
VAR_IN_OUT
END_VAR
VAR
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF THIS^.statuses.enabledStatus.enabled THEN
    THIS^.start(
        deceleration := deceleration,
        jerk := jerk);
    request := RequestResults.ACCEPTED;
ELSE
    request := RequestResults.REJECTED;
END_IF;
]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>