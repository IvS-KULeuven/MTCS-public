<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4019.2">
  <POU Name="SM_TelemetryTemperatures" Id="{8afc9438-8926-44b6-93ab-38b8d23c368d}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK SM_TelemetryTemperatures
VAR_INPUT
END_VAR
VAR_OUTPUT
	///Current status description
	{attribute 'OPC.UA.DA' := '1'}
	{attribute 'OPC.UA.DA.Access' := '1'}
	actualStatus: STRING;
	///Temperature of M1
	{attribute 'OPC.UA.DA' := '1'}
	{attribute 'OPC.UA.DA.Access' := '1'}
	m1: TemperatureMeasurement;
	///Temperature of the mirror cell
	{attribute 'OPC.UA.DA' := '1'}
	{attribute 'OPC.UA.DA.Access' := '1'}
	mirrorCell: TemperatureMeasurement;
	///Temperature of M2
	{attribute 'OPC.UA.DA' := '1'}
	{attribute 'OPC.UA.DA.Access' := '1'}
	m2: TemperatureMeasurement;
	///Temperature of the M2 electronics
	{attribute 'OPC.UA.DA' := '1'}
	{attribute 'OPC.UA.DA.Access' := '1'}
	m2Electronics: TemperatureMeasurement;
	///Temperature of the top of the tube
	{attribute 'OPC.UA.DA' := '1'}
	{attribute 'OPC.UA.DA.Access' := '1'}
	topTube: TemperatureMeasurement;
	///Temperature of the centre of the tube
	{attribute 'OPC.UA.DA' := '1'}
	{attribute 'OPC.UA.DA.Access' := '1'}
	centreTube: TemperatureMeasurement;
	///Temperature of the fork
	{attribute 'OPC.UA.DA' := '1'}
	{attribute 'OPC.UA.DA.Access' := '1'}
	fork: TemperatureMeasurement;
	///Temperature of the air inside the Nasmyth focal station
	{attribute 'OPC.UA.DA' := '1'}
	{attribute 'OPC.UA.DA.Access' := '1'}
	nasmythAir: TemperatureMeasurement;
	///Temperature inside the REM cabinet
	{attribute 'OPC.UA.DA' := '1'}
	{attribute 'OPC.UA.DA.Access' := '1'}
	rem: TemperatureMeasurement;
	///Temperature inside the RPM cabinet
	{attribute 'OPC.UA.DA' := '1'}
	{attribute 'OPC.UA.DA.Access' := '1'}
	rpm: TemperatureMeasurement;
	///Temperature inside the HERMES telescope adapter
	{attribute 'OPC.UA.DA' := '1'}
	{attribute 'OPC.UA.DA.Access' := '1'}
	hermesTelescopeAdapter: TemperatureMeasurement;
	///Temperature of the air at the top of the tube
	{attribute 'OPC.UA.DA' := '1'}
	{attribute 'OPC.UA.DA.Access' := '1'}
	topAir: TemperatureMeasurement;
	///Temperature of the air inside the tube
	{attribute 'OPC.UA.DA' := '1'}
	{attribute 'OPC.UA.DA.Access' := '1'}
	insideTube: TemperatureMeasurement;
	///Statuses of the state machine
	statuses: TelemetryTemperaturesStatuses;
END_VAR
VAR_IN_OUT
	///Configuration of the temperatures
	{attribute 'OPC.UA.DA' := '0'}
	config: TelemetryTemperaturesConfig;
END_VAR
VAR
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[m1( config := config.m1 );
mirrorCell( config := config.mirrorCell );
m2( config := config.m2 );
m2Electronics( config := config.m2Electronics );
topTube( config := config.topTube );
centreTube( config := config.centreTube );
fork( config := config.fork );
nasmythAir( config := config.nasmythAir );
rem( config := config.rem );
rpm( config := config.rpm );
hermesTelescopeAdapter( config := config.hermesTelescopeAdapter );
topAir( config := config.topAir );
insideTube( config := config.insideTube );
statuses.healthStatus(
    isGood := (m1.statuses.healthStatus.isGood OR m1.statuses.enabledStatus.disabled) AND ((mirrorCell.statuses.healthStatus.isGood OR mirrorCell.statuses.enabledStatus.disabled) AND ((m2.statuses.healthStatus.isGood OR m2.statuses.enabledStatus.disabled) AND ((m2Electronics.statuses.healthStatus.isGood OR m2Electronics.statuses.enabledStatus.disabled) AND ((topTube.statuses.healthStatus.isGood OR topTube.statuses.enabledStatus.disabled) AND ((centreTube.statuses.healthStatus.isGood OR centreTube.statuses.enabledStatus.disabled) AND ((fork.statuses.healthStatus.isGood OR fork.statuses.enabledStatus.disabled) AND ((nasmythAir.statuses.healthStatus.isGood OR nasmythAir.statuses.enabledStatus.disabled) AND ((rem.statuses.healthStatus.isGood OR rem.statuses.enabledStatus.disabled) AND ((rpm.statuses.healthStatus.isGood OR rpm.statuses.enabledStatus.disabled) AND ((hermesTelescopeAdapter.statuses.healthStatus.isGood OR hermesTelescopeAdapter.statuses.enabledStatus.disabled) AND ((topAir.statuses.healthStatus.isGood OR topAir.statuses.enabledStatus.disabled) AND (insideTube.statuses.healthStatus.isGood OR insideTube.statuses.enabledStatus.disabled)))))))))))),
    hasWarning := m1.statuses.healthStatus.hasWarning OR (mirrorCell.statuses.healthStatus.hasWarning OR (m2.statuses.healthStatus.hasWarning OR (m2Electronics.statuses.healthStatus.hasWarning OR (topTube.statuses.healthStatus.hasWarning OR (centreTube.statuses.healthStatus.hasWarning OR (fork.statuses.healthStatus.hasWarning OR (nasmythAir.statuses.healthStatus.hasWarning OR (rem.statuses.healthStatus.hasWarning OR (rpm.statuses.healthStatus.hasWarning OR (hermesTelescopeAdapter.statuses.healthStatus.hasWarning OR (topAir.statuses.healthStatus.hasWarning OR insideTube.statuses.healthStatus.hasWarning))))))))))));
]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>